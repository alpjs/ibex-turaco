{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* global $document */\nimport { ConsoleLogger } from 'nightingale';\nimport $ from 'springbokjs-dom';\nimport { Component, Fragment, View, Layout, TopLayout } from 'turaco';\nimport { loadComponents, loadViews } from 'turaco/lib/browser/loaders';\nimport BrowserComponentRenderer from 'turaco/lib/browser/renderers/BrowserComponentRenderer';\nimport BrowserViewRenderer from 'turaco/lib/browser/renderers/BrowserViewRenderer';\nglobal.React = global.$ = $;\n\nconst logger = new ConsoleLogger('ibex.turaco');\n\nclass IbexComponentRenderer extends BrowserComponentRenderer {\n    load(componentName, $container, options) {\n        return super.load({ name: componentName, nameOrClass: componentName }, $container, options);\n    }\n}\n\nclass IbexViewRenderer extends BrowserViewRenderer {\n    load(viewName, $container, options) {\n        return super.load({ name: viewName, nameOrClass: viewName }, $container, options);\n    }\n\n    _internalRender(sourceView, nameOrClass, properties, data) {\n        return this.createThenRender({\n            name: nameOrClass.name,\n            nameOrClass: nameOrClass,\n            context: sourceView.context,\n        }, properties, data);\n    }\n}\nconst oldViewComponent = View.prototype.component;\n\nView.prototype.component = function (componentClass) {\n    return oldViewComponent.call(this, {\n        name: componentClass.name,\n        nameOrClass: componentClass,\n        context: this.context,\n    });\n};\n\nconst oldComponentComponent = Component.prototype.component;\n\nComponent.prototype.component = function (componentClass) {\n    return oldComponentComponent.call(this, {\n        name: componentClass.name,\n        nameOrClass: componentClass,\n        context: this.context,\n    });\n};\n\nexport { Component, Fragment, View, Layout, TopLayout };\n\nfunction instanceFactory(dirname, suffix) {\n    return function ({ nameOrClass, context }, options) {\n        if (nameOrClass === undefined) {\n            throw new Error('Cannot instanciate undefined');\n        }\n\n        if (typeof nameOrClass !== 'function') {\n            const path = dirname + nameOrClass + (suffix || '');\n            nameOrClass = System.import(path).then(objOrClass => {\n                if (typeof objOrClass !== 'function') {\n                    return objOrClass.default;\n                }\n\n                return objOrClass;\n            });\n            context = context || options.context;\n        }\n\n        if (typeof nameOrClass === 'object' && typeof nameOrClass.then === 'function') {\n            return nameOrClass.then(Class => {\n                const instance = new Class(); // jscs:ignore requireCapitalizedConstructors\n                instance.context = context;\n                return instance;\n            });\n        } else {\n            // const instance = Object.create(nameOrClass.prototype);\n            // nameOrClass.call(instance);\n            const instance = new nameOrClass(); // eslint-disable-line new-cap\n            instance.context = context;\n            return instance;\n        }\n    };\n}\n\nexport default function aukTuraco(viewDirectory) {\n    return (app) => {\n        app.componentRenderer = new IbexComponentRenderer(\n            instanceFactory(viewDirectory + 'components/')\n        );\n\n        app.viewRenderer = new IbexViewRenderer(\n            instanceFactory(viewDirectory),\n            app.componentRenderer\n        );\n\n        app.context.render = function (View, properties, data) {\n            logger.debug('render view', { viewName: View.name, properties, data });\n\n            if (!View) {\n                throw new Error('View is undefined, class expected');\n            }\n\n            return this.app.viewRenderer.createThenRender({\n                name: View.name,\n                nameOrClass: View,\n                context: this,\n            }, properties, data)\n                .then(view => this.body = view.toHtmlString());\n        };\n\n        const context = Object.create(app.context); // initial context.\n        if (document.readyState === 'complete') {\n            logger.debug('load components and views, document is already ready');\n            loadComponents(app.componentRenderer, { context });\n            loadViews(app.viewRenderer, { context });\n        } else {\n            logger.debug('waiting document ready');\n            $document.on('DOMContentLoaded', () => {\n                logger.debug('load components and views, document is ready');\n                loadComponents(app.componentRenderer, { context });\n                loadViews(app.viewRenderer, { context });\n            });\n        }\n    };\n}\n"]}